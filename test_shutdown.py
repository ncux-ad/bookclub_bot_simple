"""
@file: test_shutdown.py
@description: –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ graceful shutdown
@dependencies: asyncio, signal, sys
@created: 2024-01-15
"""

import asyncio
import signal
import sys
import time


async def test_shutdown():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ graceful shutdown"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è shutdown
    shutdown_event = asyncio.Event()
    
    def signal_handler(signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤"""
        print(f"üì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
        shutdown_event.set()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    if sys.platform != "win32":
        signal.signal(signal.SIGINT, signal_handler)
        signal.signal(signal.SIGTERM, signal_handler)
    
    async def long_running_task():
        """–î–æ–ª–≥–æ –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è—Å—è –∑–∞–¥–∞—á–∞"""
        i = 0
        while not shutdown_event.is_set():
            print(f"‚è±Ô∏è –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–¥–∞—á–∞ {i}")
            try:
                await asyncio.sleep(1)
            except asyncio.CancelledError:
                print("‚èπÔ∏è –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
                break
            i += 1
            if i > 10:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è —Ç–µ—Å—Ç–∞
                break
    
    async def graceful_shutdown():
        """Graceful shutdown"""
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º graceful shutdown...")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
        await asyncio.sleep(0.5)
        print("‚úÖ –†–µ—Å—É—Ä—Å—ã –∑–∞–∫—Ä—ã—Ç—ã")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await asyncio.sleep(0.5)
        print("‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        
        print("‚úÖ Graceful shutdown –∑–∞–≤–µ—Ä—à–µ–Ω")
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∑–∞–¥–∞—á—É
        task = asyncio.create_task(long_running_task())
        
        # –ù–∞ Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π await
        if sys.platform == "win32":
            await task
        else:
            # –ñ–¥–µ–º –ª–∏–±–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏, –ª–∏–±–æ —Å–∏–≥–Ω–∞–ª–∞
            await asyncio.wait(
                [task, shutdown_event.wait()],
                return_when=asyncio.FIRST_COMPLETED
            )
            
            if shutdown_event.is_set():
                print("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
                task.cancel()
                try:
                    await task
                except asyncio.CancelledError:
                    pass
        
    except KeyboardInterrupt:
        print("‚èπÔ∏è –ü–æ–ª—É—á–µ–Ω KeyboardInterrupt")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await graceful_shutdown()


if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ graceful shutdown")
    print("–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è graceful shutdown")
    asyncio.run(test_shutdown()) 
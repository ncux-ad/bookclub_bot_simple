"""
@file: utils/telegram_uploader.py
@description: –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤ –≤ Telegram –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —à–∞—Ä–∏–Ω–≥–∞
@dependencies: aiogram, pathlib
@created: 2025-01-04
"""

from pathlib import Path
from typing import Dict, Optional, List
import asyncio
import platform
from aiogram.types import FSInputFile

from utils.logger import bot_logger


class TelegramUploader:
    """–ó–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤ –≤ Telegram"""
    
    def __init__(self):
        self.logger = bot_logger
        self.uploaded_files = {}  # –ö—ç—à –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        self.is_windows = platform.system() == "Windows"
    
    async def upload_book_file(self, bot, file_path: str, chat_id: int) -> Optional[str]:
        """
        –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∫–Ω–∏–≥–∏ –≤ Telegram
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
            chat_id: ID —á–∞—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            
        Returns:
            str: file_id –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–ª–∏ None
        """
        try:
            path = Path(file_path)
            if not path.exists():
                self.logger.log_error(Exception("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"), f"file_path: {file_path}")
                return None
            
            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø—É—Ç—å –¥–ª—è Windows
            if self.is_windows:
                path = path.resolve()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
            file_extension = path.suffix.lower()
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
            if file_extension == '.epub':
                message = await bot.send_document(
                    chat_id=chat_id,
                    document=FSInputFile(str(path)),
                    caption=f"üìö {path.stem}.epub"
                )
            elif file_extension == '.mobi':
                message = await bot.send_document(
                    chat_id=chat_id,
                    document=FSInputFile(str(path)),
                    caption=f"üìö {path.stem}.mobi"
                )
            elif file_extension == '.fb2':
                message = await bot.send_document(
                    chat_id=chat_id,
                    document=FSInputFile(str(path)),
                    caption=f"üìö {path.stem}.fb2"
                )
            else:
                self.logger.log_error(Exception("–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞"), f"file_path: {file_path}")
                return None
            
            # –ü–æ–ª—É—á–∞–µ–º file_id
            if message.document:
                file_id = message.document.file_id
                self.uploaded_files[file_path] = file_id
                self.logger.log_file_operation("–∑–∞–≥—Ä—É–∑–∫–∞ –≤ Telegram", file_path, True)
                return file_id
            else:
                self.logger.log_error(Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å file_id"), f"file_path: {file_path}")
                return None
                
        except Exception as e:
            self.logger.log_error(e, f"–æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –≤ Telegram: {file_path}")
            return None
    
    async def upload_book_formats(self, bot, file_paths: Dict[str, str], chat_id: int) -> Dict[str, str]:
        """
        –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã –∫–Ω–∏–≥–∏ –≤ Telegram
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            file_paths: –°–ª–æ–≤–∞—Ä—å —Å –ø—É—Ç—è–º–∏ –∫ —Ñ–∞–π–ª–∞–º —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
            chat_id: ID —á–∞—Ç–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
            
        Returns:
            Dict[str, str]: –°–ª–æ–≤–∞—Ä—å —Å file_id –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
        """
        uploaded_file_ids = {}
        
        for format_type, file_path in file_paths.items():
            file_id = await self.upload_book_file(bot, file_path, chat_id)
            if file_id:
                uploaded_file_ids[format_type] = file_id
        
        return uploaded_file_ids
    
    def get_file_id(self, file_path: str) -> Optional[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å file_id –¥–ª—è —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        
        Args:
            file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
            
        Returns:
            str: file_id –∏–ª–∏ None
        """
        return self.uploaded_files.get(file_path)
    
    def clear_cache(self) -> None:
        """–û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
        self.uploaded_files.clear()
        self.logger.log_file_operation("–æ—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞", "uploaded_files", True)


# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
telegram_uploader = TelegramUploader() 